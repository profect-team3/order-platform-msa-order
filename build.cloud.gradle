plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'goorm.delivery'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    querydslVersion = '5.0.0'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


dependencies {
    //Spring Boot 기본
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    //Persistence / DB
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
        // DB
    runtimeOnly   "org.postgresql:postgresql"

    // Security / OAuth2
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.boot:spring-boot-starter-batch"

    //Security
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"

    //OpenAPI (Swagger UI)
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0"

    // Redis/분산락
    implementation "org.redisson:redisson-spring-boot-starter:3.24.3"

    // Resilience4j
    implementation "io.github.resilience4j:resilience4j-spring-boot3:2.2.0"
    implementation "io.github.resilience4j:resilience4j-circuitbreaker:2.2.0"

    // QueryDSL (Jakarta)
    implementation "com.querydsl:querydsl-jpa:5.1.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Lombok
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    // === 공통 모듈(JAR) ===
    implementation files('libs/msa-common-util-1.0.1-plain.jar')

    // === Test ===
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testRuntimeOnly   "org.junit.platform:junit-platform-launcher"

    // Actuator
    implementation "org.springframework.boot:spring-boot-starter-actuator"

}

clean {
    delete file('src/main/generated')
}


tasks.named('test') {
    useJUnitPlatform()
}